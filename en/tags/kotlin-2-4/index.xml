<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>kotlin-2-4 on Carrion.dev</title><link>https://carrion.dev/en/tags/kotlin-2-4/</link><description>Recent content in kotlin-2-4 on Carrion.dev</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>ignacio@carrion.dev (Ignacio Carrión)</managingEditor><webMaster>ignacio@carrion.dev (Ignacio Carrión)</webMaster><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Fri, 29 Aug 2025 08:00:00 +0100</lastBuildDate><atom:link href="https://carrion.dev/en/tags/kotlin-2-4/index.xml" rel="self" type="application/rss+xml"/><item><title>Kotlin 2.4 Rich Errors: What They Are and How to Prepare</title><link>https://carrion.dev/en/posts/kotlin-24-rich-errors/</link><pubDate>Fri, 29 Aug 2025 08:00:00 +0100</pubDate><author>ignacio@carrion.dev (Ignacio Carrión)</author><atom:modified>Fri, 29 Aug 2025 08:00:00 +0100</atom:modified><guid>https://carrion.dev/en/posts/kotlin-24-rich-errors/</guid><description>Kotlin 2.4 Rich Errors: What They Are and How to Prepare Kotlin 2.4 introduces “Rich errors” — a more expressive, structured way to represent and propagate failures. The goal is clear: make error flows visible and composable across your codebase and platforms, without losing Kotlin’s ergonomics or its great interop story.
This article explains the problems Rich errors solve, how they relate to today’s exceptions and Result, what to expect in terms of mental model and interop, and how to prepare your codebase to adopt it smoothly.</description><dc:creator>Ignacio Carrión</dc:creator><media:content url="https://carrion.dev/images/kotlin/rich-errors.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>kotlin</category><category>error-handling</category><category>exceptions</category><category>result</category><category>kotlin-2-4</category></item></channel></rss>