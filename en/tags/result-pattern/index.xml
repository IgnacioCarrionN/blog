<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>result-pattern on Carrion.dev</title><link>https://carrion.dev/en/tags/result-pattern/</link><description>Recent content in result-pattern on Carrion.dev</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>ignacio@carrion.dev (Ignacio Carri贸n)</managingEditor><webMaster>ignacio@carrion.dev (Ignacio Carri贸n)</webMaster><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Fri, 20 Jun 2025 08:00:00 +0100</lastBuildDate><atom:link href="https://carrion.dev/en/tags/result-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Elegant Error Handling in Kotlin: Using runCatching and Result</title><link>https://carrion.dev/en/posts/runcatching-result-pattern/</link><pubDate>Fri, 20 Jun 2025 08:00:00 +0100</pubDate><author>ignacio@carrion.dev (Ignacio Carri贸n)</author><atom:modified>Fri, 20 Jun 2025 08:00:00 +0100</atom:modified><guid>https://carrion.dev/en/posts/runcatching-result-pattern/</guid><description>Elegant Error Handling in Kotlin: Using runCatching and Result Exception handling is a critical aspect of writing robust applications, but traditional try/catch blocks can lead to verbose, nested code that&amp;rsquo;s difficult to read and maintain. Kotlin offers a more elegant approach with the runCatching function and Result type, which allow you to handle exceptions in a functional way while maintaining code readability and preventing crashes. This blog post explores how to effectively use these features to improve your error handling strategy.</description><dc:creator>Ignacio Carri贸n</dc:creator><media:content url="https://carrion.dev/images/kotlin/result-pattern.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>kotlin</category><category>error-handling</category><category>functional-programming</category><category>result-pattern</category><category>exception-handling</category></item></channel></rss>