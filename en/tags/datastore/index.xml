<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>datastore on Carrion.dev</title><link>https://carrion.dev/en/tags/datastore/</link><description>Recent content in datastore on Carrion.dev</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>ignacio@carrion.dev (Ignacio Carri贸n)</managingEditor><webMaster>ignacio@carrion.dev (Ignacio Carri贸n)</webMaster><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Fri, 09 May 2025 08:00:00 +0100</lastBuildDate><atom:link href="https://carrion.dev/en/tags/datastore/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing DataStore in Kotlin Multiplatform Projects</title><link>https://carrion.dev/en/posts/datastore-in-kmp/</link><pubDate>Fri, 09 May 2025 08:00:00 +0100</pubDate><author>ignacio@carrion.dev (Ignacio Carri贸n)</author><atom:modified>Fri, 09 May 2025 08:00:00 +0100</atom:modified><guid>https://carrion.dev/en/posts/datastore-in-kmp/</guid><description>Implementing DataStore in Kotlin Multiplatform Projects DataStore is a modern data storage solution developed by Google as a replacement for SharedPreferences. It provides a consistent, type-safe API for storing key-value pairs and typed objects with Kotlin coroutines and Flow support. With the recent advancements in Kotlin Multiplatform (KMP), we can now integrate DataStore into our KMP projects, allowing us to share preferences and data storage code across platforms. This blog post explores how to configure, implement, and optimize DataStore in a KMP environment.</description><dc:creator>Ignacio Carri贸n</dc:creator><media:content url="https://carrion.dev/images/kotlin/datastore-kmp.png" medium="image"><media:title type="html">featured image</media:title></media:content><category>kotlin</category><category>multiplatform</category><category>kmp</category><category>datastore</category><category>preferences</category></item></channel></rss>